machine:
  java:
    version: openjdk8
  pre:
    # This line updates / installs missing SDK components that don't seem to be
    # up-to-date in the container used to build and test.
    # - echo "y" | android update sdk -u -a -t "build-tools-25.0.2","extra-android-m2repository"
    
    - git fetch origin # sometimes circleci fail to fetch branches correctly, so fetch them expressly
    - echo y | android -s update sdk -u -a -t "tools" # update Android SDK that includes sdkmanager(1)
    - mkdir -p $ANDROID_HOME/licenses
    - echo -e "8933bad161af4178b1185d1a37fbf41ea5269c55" > $ANDROID_HOME/licenses/android-sdk-license
    - echo -e "84831b9409646a918e30573bab4c9c91346d8abd" > $ANDROID_HOME/licenses/android-sdk-preview-license
    - $ANDROID_HOME/tools/bin/sdkmanager "platform-tools" "extras;android;m2repository" "extras;google;m2repository"
    - $ANDROID_HOME/tools/bin/sdkmanager "extras;m2repository;com;android;support;constraint;constraint-layout;1.0.2"
    - $ANDROID_HOME/tools/bin/sdkmanager "extras;m2repository;com;android;support;constraint;constraint-layout-solver;1.0.2"
test:
  override:
    # Start the emulator
    - emulator -avd circleci-android22 -no-audio -no-window:
        background: true
        parallel: true
    # The emulator takes about 4 1/2 minutes to boot, so wait until it's ready before
    # starting the tests.
    - circle-android wait-for-boot
    # Run the tests on the emulator, and create a coverage report
    - ./gradlew createDebugCoverageReport
    # Copy the coverage reports
    - cp -r KitePrintSDK/build/reports $CIRCLE_ARTIFACTS
  post:
    # Upload coverage reports to Codecov
    - bash <(curl -s https://codecov.io/bash)
